Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLA
    DISTINTO
    PLUS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> MET ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
Rule 2     instrucciones -> variable instrucciones
Rule 3     instrucciones -> si instrucciones
Rule 4     instrucciones -> imprimir instrucciones
Rule 5     instrucciones -> for instrucciones
Rule 6     instrucciones -> empty
Rule 7     for -> FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE
Rule 8     valor -> NUMERO
Rule 9     valor -> ID
Rule 10    variable -> ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA
Rule 11    tipodato -> INT
Rule 12    tipodato -> FLOAT
Rule 13    tipodato -> STRING
Rule 14    datos -> NUMERO
Rule 15    datos -> NUMERO PUNTO NUMERO
Rule 16    datos -> CADENA
Rule 17    datos -> MINUS NUMERO
Rule 18    datos -> MINUS NUMERO PUNTO NUMERO
Rule 19    datos -> empty
Rule 20    si -> IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else
Rule 21    else -> ELSE LLLAVE instrucciones RLLAVE
Rule 22    imprimir -> WRITE DOSPUNTOS mensaje PUNTOCOMA
Rule 23    mensaje -> datosM
Rule 24    mensaje -> ID
Rule 25    mensaje -> datosM COMA mensajerep
Rule 26    mensaje -> ID COMA mensajerep
Rule 27    mensaje -> datosM COMA ID mensajerep
Rule 28    mensajerep -> datosM
Rule 29    mensajerep -> ID
Rule 30    datosM -> NUMERO
Rule 31    datosM -> NUMERO PUNTO NUMERO
Rule 32    datosM -> CADENA
Rule 33    evaluar -> ID comparar ID
Rule 34    evaluar -> NUMERO comparar NUMERO
Rule 35    evaluar -> ID comparar NUMERO
Rule 36    evaluar -> NUMERO comparar ID
Rule 37    comparar -> IGUALIGUAL
Rule 38    comparar -> MENORQUE
Rule 39    comparar -> MAYORQUE
Rule 40    comparar -> MENORIGUAL
Rule 41    comparar -> MAYORIGUAL
Rule 42    empty -> <empty>

Terminals, with rules where they appear

CADENA               : 16 32
COMA                 : 25 26 27
COMILLA              : 
DISTINTO             : 
DOSPUNTOS            : 22
ELSE                 : 21
FLOAT                : 12
FOR                  : 7
ID                   : 1 7 9 10 24 26 27 29 33 33 35 36
IF                   : 20
IGUAL                : 10
IGUALIGUAL           : 37
INT                  : 11
LLLAVE               : 1 7 20 21
LPAREN               : 1 7 10 20
MAYORIGUAL           : 41
MAYORQUE             : 39
MENORIGUAL           : 40
MENORQUE             : 38
MET                  : 1
MINUS                : 17 18
NUMERO               : 8 14 15 15 17 18 18 30 31 31 34 34 35 36
PLUS                 : 
PUNTO                : 15 18 31
PUNTOCOMA            : 10 22
RLLAVE               : 1 7 20 21
RPAREN               : 1 7 10 20
STRING               : 13
TO                   : 7
WRITE                : 22
error                : 

Nonterminals, with rules where they appear

comparar             : 33 34 35 36
datos                : 10
datosM               : 23 25 27 28
else                 : 20
empty                : 6 19
evaluar              : 20
for                  : 5
imprimir             : 4
inicio               : 0
instrucciones        : 1 2 3 4 5 7 20 21
mensaje              : 22
mensajerep           : 25 26 27
si                   : 3
tipodato             : 10
valor                : 7
variable             : 2

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . MET ID LPAREN RPAREN LLLAVE instrucciones RLLAVE

    MET             shift and go to state 2

    inicio                         shift and go to state 1

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> MET . ID LPAREN RPAREN LLLAVE instrucciones RLLAVE

    ID              shift and go to state 3


state 3

    (1) inicio -> MET ID . LPAREN RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 4


state 4

    (1) inicio -> MET ID LPAREN . RPAREN LLLAVE instrucciones RLLAVE

    RPAREN          shift and go to state 5


state 5

    (1) inicio -> MET ID LPAREN RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 6


state 6

    (1) inicio -> MET ID LPAREN RPAREN LLLAVE . instrucciones RLLAVE
    (2) instrucciones -> . variable instrucciones
    (3) instrucciones -> . si instrucciones
    (4) instrucciones -> . imprimir instrucciones
    (5) instrucciones -> . for instrucciones
    (6) instrucciones -> . empty
    (10) variable -> . ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA
    (20) si -> . IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else
    (22) imprimir -> . WRITE DOSPUNTOS mensaje PUNTOCOMA
    (7) for -> . FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE
    (42) empty -> .

    ID              shift and go to state 7
    IF              shift and go to state 14
    WRITE           shift and go to state 15
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 42 (empty -> .)

    instrucciones                  shift and go to state 8
    variable                       shift and go to state 9
    si                             shift and go to state 10
    imprimir                       shift and go to state 11
    for                            shift and go to state 12
    empty                          shift and go to state 13

state 7

    (10) variable -> ID . IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA

    IGUAL           shift and go to state 17


state 8

    (1) inicio -> MET ID LPAREN RPAREN LLLAVE instrucciones . RLLAVE

    RLLAVE          shift and go to state 18


state 9

    (2) instrucciones -> variable . instrucciones
    (2) instrucciones -> . variable instrucciones
    (3) instrucciones -> . si instrucciones
    (4) instrucciones -> . imprimir instrucciones
    (5) instrucciones -> . for instrucciones
    (6) instrucciones -> . empty
    (10) variable -> . ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA
    (20) si -> . IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else
    (22) imprimir -> . WRITE DOSPUNTOS mensaje PUNTOCOMA
    (7) for -> . FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE
    (42) empty -> .

    ID              shift and go to state 7
    IF              shift and go to state 14
    WRITE           shift and go to state 15
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 42 (empty -> .)

    variable                       shift and go to state 9
    instrucciones                  shift and go to state 19
    si                             shift and go to state 10
    imprimir                       shift and go to state 11
    for                            shift and go to state 12
    empty                          shift and go to state 13

state 10

    (3) instrucciones -> si . instrucciones
    (2) instrucciones -> . variable instrucciones
    (3) instrucciones -> . si instrucciones
    (4) instrucciones -> . imprimir instrucciones
    (5) instrucciones -> . for instrucciones
    (6) instrucciones -> . empty
    (10) variable -> . ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA
    (20) si -> . IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else
    (22) imprimir -> . WRITE DOSPUNTOS mensaje PUNTOCOMA
    (7) for -> . FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE
    (42) empty -> .

    ID              shift and go to state 7
    IF              shift and go to state 14
    WRITE           shift and go to state 15
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 42 (empty -> .)

    si                             shift and go to state 10
    instrucciones                  shift and go to state 20
    variable                       shift and go to state 9
    imprimir                       shift and go to state 11
    for                            shift and go to state 12
    empty                          shift and go to state 13

state 11

    (4) instrucciones -> imprimir . instrucciones
    (2) instrucciones -> . variable instrucciones
    (3) instrucciones -> . si instrucciones
    (4) instrucciones -> . imprimir instrucciones
    (5) instrucciones -> . for instrucciones
    (6) instrucciones -> . empty
    (10) variable -> . ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA
    (20) si -> . IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else
    (22) imprimir -> . WRITE DOSPUNTOS mensaje PUNTOCOMA
    (7) for -> . FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE
    (42) empty -> .

    ID              shift and go to state 7
    IF              shift and go to state 14
    WRITE           shift and go to state 15
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 42 (empty -> .)

    imprimir                       shift and go to state 11
    instrucciones                  shift and go to state 21
    variable                       shift and go to state 9
    si                             shift and go to state 10
    for                            shift and go to state 12
    empty                          shift and go to state 13

state 12

    (5) instrucciones -> for . instrucciones
    (2) instrucciones -> . variable instrucciones
    (3) instrucciones -> . si instrucciones
    (4) instrucciones -> . imprimir instrucciones
    (5) instrucciones -> . for instrucciones
    (6) instrucciones -> . empty
    (10) variable -> . ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA
    (20) si -> . IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else
    (22) imprimir -> . WRITE DOSPUNTOS mensaje PUNTOCOMA
    (7) for -> . FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE
    (42) empty -> .

    ID              shift and go to state 7
    IF              shift and go to state 14
    WRITE           shift and go to state 15
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 42 (empty -> .)

    for                            shift and go to state 12
    instrucciones                  shift and go to state 22
    variable                       shift and go to state 9
    si                             shift and go to state 10
    imprimir                       shift and go to state 11
    empty                          shift and go to state 13

state 13

    (6) instrucciones -> empty .

    RLLAVE          reduce using rule 6 (instrucciones -> empty .)


state 14

    (20) si -> IF . LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else

    LPAREN          shift and go to state 23


state 15

    (22) imprimir -> WRITE . DOSPUNTOS mensaje PUNTOCOMA

    DOSPUNTOS       shift and go to state 24


state 16

    (7) for -> FOR . LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 25


state 17

    (10) variable -> ID IGUAL . tipodato LPAREN datos RPAREN PUNTOCOMA
    (11) tipodato -> . INT
    (12) tipodato -> . FLOAT
    (13) tipodato -> . STRING

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29

    tipodato                       shift and go to state 26

state 18

    (1) inicio -> MET ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .

    $end            reduce using rule 1 (inicio -> MET ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)


state 19

    (2) instrucciones -> variable instrucciones .

    RLLAVE          reduce using rule 2 (instrucciones -> variable instrucciones .)


state 20

    (3) instrucciones -> si instrucciones .

    RLLAVE          reduce using rule 3 (instrucciones -> si instrucciones .)


state 21

    (4) instrucciones -> imprimir instrucciones .

    RLLAVE          reduce using rule 4 (instrucciones -> imprimir instrucciones .)


state 22

    (5) instrucciones -> for instrucciones .

    RLLAVE          reduce using rule 5 (instrucciones -> for instrucciones .)


state 23

    (20) si -> IF LPAREN . evaluar RPAREN LLLAVE instrucciones RLLAVE else
    (33) evaluar -> . ID comparar ID
    (34) evaluar -> . NUMERO comparar NUMERO
    (35) evaluar -> . ID comparar NUMERO
    (36) evaluar -> . NUMERO comparar ID

    ID              shift and go to state 31
    NUMERO          shift and go to state 32

    evaluar                        shift and go to state 30

state 24

    (22) imprimir -> WRITE DOSPUNTOS . mensaje PUNTOCOMA
    (23) mensaje -> . datosM
    (24) mensaje -> . ID
    (25) mensaje -> . datosM COMA mensajerep
    (26) mensaje -> . ID COMA mensajerep
    (27) mensaje -> . datosM COMA ID mensajerep
    (30) datosM -> . NUMERO
    (31) datosM -> . NUMERO PUNTO NUMERO
    (32) datosM -> . CADENA

    ID              shift and go to state 35
    NUMERO          shift and go to state 36
    CADENA          shift and go to state 37

    mensaje                        shift and go to state 33
    datosM                         shift and go to state 34

state 25

    (7) for -> FOR LPAREN . ID TO valor RPAREN LLLAVE instrucciones RLLAVE

    ID              shift and go to state 38


state 26

    (10) variable -> ID IGUAL tipodato . LPAREN datos RPAREN PUNTOCOMA

    LPAREN          shift and go to state 39


state 27

    (11) tipodato -> INT .

    LPAREN          reduce using rule 11 (tipodato -> INT .)


state 28

    (12) tipodato -> FLOAT .

    LPAREN          reduce using rule 12 (tipodato -> FLOAT .)


state 29

    (13) tipodato -> STRING .

    LPAREN          reduce using rule 13 (tipodato -> STRING .)


state 30

    (20) si -> IF LPAREN evaluar . RPAREN LLLAVE instrucciones RLLAVE else

    RPAREN          shift and go to state 40


state 31

    (33) evaluar -> ID . comparar ID
    (35) evaluar -> ID . comparar NUMERO
    (37) comparar -> . IGUALIGUAL
    (38) comparar -> . MENORQUE
    (39) comparar -> . MAYORQUE
    (40) comparar -> . MENORIGUAL
    (41) comparar -> . MAYORIGUAL

    IGUALIGUAL      shift and go to state 42
    MENORQUE        shift and go to state 43
    MAYORQUE        shift and go to state 44
    MENORIGUAL      shift and go to state 45
    MAYORIGUAL      shift and go to state 46

    comparar                       shift and go to state 41

state 32

    (34) evaluar -> NUMERO . comparar NUMERO
    (36) evaluar -> NUMERO . comparar ID
    (37) comparar -> . IGUALIGUAL
    (38) comparar -> . MENORQUE
    (39) comparar -> . MAYORQUE
    (40) comparar -> . MENORIGUAL
    (41) comparar -> . MAYORIGUAL

    IGUALIGUAL      shift and go to state 42
    MENORQUE        shift and go to state 43
    MAYORQUE        shift and go to state 44
    MENORIGUAL      shift and go to state 45
    MAYORIGUAL      shift and go to state 46

    comparar                       shift and go to state 47

state 33

    (22) imprimir -> WRITE DOSPUNTOS mensaje . PUNTOCOMA

    PUNTOCOMA       shift and go to state 48


state 34

    (23) mensaje -> datosM .
    (25) mensaje -> datosM . COMA mensajerep
    (27) mensaje -> datosM . COMA ID mensajerep

    PUNTOCOMA       reduce using rule 23 (mensaje -> datosM .)
    COMA            shift and go to state 49


state 35

    (24) mensaje -> ID .
    (26) mensaje -> ID . COMA mensajerep

    PUNTOCOMA       reduce using rule 24 (mensaje -> ID .)
    COMA            shift and go to state 50


state 36

    (30) datosM -> NUMERO .
    (31) datosM -> NUMERO . PUNTO NUMERO

    COMA            reduce using rule 30 (datosM -> NUMERO .)
    PUNTOCOMA       reduce using rule 30 (datosM -> NUMERO .)
    PUNTO           shift and go to state 51


state 37

    (32) datosM -> CADENA .

    COMA            reduce using rule 32 (datosM -> CADENA .)
    PUNTOCOMA       reduce using rule 32 (datosM -> CADENA .)


state 38

    (7) for -> FOR LPAREN ID . TO valor RPAREN LLLAVE instrucciones RLLAVE

    TO              shift and go to state 52


state 39

    (10) variable -> ID IGUAL tipodato LPAREN . datos RPAREN PUNTOCOMA
    (14) datos -> . NUMERO
    (15) datos -> . NUMERO PUNTO NUMERO
    (16) datos -> . CADENA
    (17) datos -> . MINUS NUMERO
    (18) datos -> . MINUS NUMERO PUNTO NUMERO
    (19) datos -> . empty
    (42) empty -> .

    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    MINUS           shift and go to state 56
    RPAREN          reduce using rule 42 (empty -> .)

    datos                          shift and go to state 53
    empty                          shift and go to state 57

state 40

    (20) si -> IF LPAREN evaluar RPAREN . LLLAVE instrucciones RLLAVE else

    LLLAVE          shift and go to state 58


state 41

    (33) evaluar -> ID comparar . ID
    (35) evaluar -> ID comparar . NUMERO

    ID              shift and go to state 59
    NUMERO          shift and go to state 60


state 42

    (37) comparar -> IGUALIGUAL .

    ID              reduce using rule 37 (comparar -> IGUALIGUAL .)
    NUMERO          reduce using rule 37 (comparar -> IGUALIGUAL .)


state 43

    (38) comparar -> MENORQUE .

    ID              reduce using rule 38 (comparar -> MENORQUE .)
    NUMERO          reduce using rule 38 (comparar -> MENORQUE .)


state 44

    (39) comparar -> MAYORQUE .

    ID              reduce using rule 39 (comparar -> MAYORQUE .)
    NUMERO          reduce using rule 39 (comparar -> MAYORQUE .)


state 45

    (40) comparar -> MENORIGUAL .

    ID              reduce using rule 40 (comparar -> MENORIGUAL .)
    NUMERO          reduce using rule 40 (comparar -> MENORIGUAL .)


state 46

    (41) comparar -> MAYORIGUAL .

    ID              reduce using rule 41 (comparar -> MAYORIGUAL .)
    NUMERO          reduce using rule 41 (comparar -> MAYORIGUAL .)


state 47

    (34) evaluar -> NUMERO comparar . NUMERO
    (36) evaluar -> NUMERO comparar . ID

    NUMERO          shift and go to state 61
    ID              shift and go to state 62


state 48

    (22) imprimir -> WRITE DOSPUNTOS mensaje PUNTOCOMA .

    ID              reduce using rule 22 (imprimir -> WRITE DOSPUNTOS mensaje PUNTOCOMA .)
    IF              reduce using rule 22 (imprimir -> WRITE DOSPUNTOS mensaje PUNTOCOMA .)
    WRITE           reduce using rule 22 (imprimir -> WRITE DOSPUNTOS mensaje PUNTOCOMA .)
    FOR             reduce using rule 22 (imprimir -> WRITE DOSPUNTOS mensaje PUNTOCOMA .)
    RLLAVE          reduce using rule 22 (imprimir -> WRITE DOSPUNTOS mensaje PUNTOCOMA .)


state 49

    (25) mensaje -> datosM COMA . mensajerep
    (27) mensaje -> datosM COMA . ID mensajerep
    (28) mensajerep -> . datosM
    (29) mensajerep -> . ID
    (30) datosM -> . NUMERO
    (31) datosM -> . NUMERO PUNTO NUMERO
    (32) datosM -> . CADENA

    ID              shift and go to state 65
    NUMERO          shift and go to state 36
    CADENA          shift and go to state 37

    datosM                         shift and go to state 63
    mensajerep                     shift and go to state 64

state 50

    (26) mensaje -> ID COMA . mensajerep
    (28) mensajerep -> . datosM
    (29) mensajerep -> . ID
    (30) datosM -> . NUMERO
    (31) datosM -> . NUMERO PUNTO NUMERO
    (32) datosM -> . CADENA

    ID              shift and go to state 66
    NUMERO          shift and go to state 36
    CADENA          shift and go to state 37

    mensajerep                     shift and go to state 67
    datosM                         shift and go to state 63

state 51

    (31) datosM -> NUMERO PUNTO . NUMERO

    NUMERO          shift and go to state 68


state 52

    (7) for -> FOR LPAREN ID TO . valor RPAREN LLLAVE instrucciones RLLAVE
    (8) valor -> . NUMERO
    (9) valor -> . ID

    NUMERO          shift and go to state 71
    ID              shift and go to state 69

    valor                          shift and go to state 70

state 53

    (10) variable -> ID IGUAL tipodato LPAREN datos . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 72


state 54

    (14) datos -> NUMERO .
    (15) datos -> NUMERO . PUNTO NUMERO

    RPAREN          reduce using rule 14 (datos -> NUMERO .)
    PUNTO           shift and go to state 73


state 55

    (16) datos -> CADENA .

    RPAREN          reduce using rule 16 (datos -> CADENA .)


state 56

    (17) datos -> MINUS . NUMERO
    (18) datos -> MINUS . NUMERO PUNTO NUMERO

    NUMERO          shift and go to state 74


state 57

    (19) datos -> empty .

    RPAREN          reduce using rule 19 (datos -> empty .)


state 58

    (20) si -> IF LPAREN evaluar RPAREN LLLAVE . instrucciones RLLAVE else
    (2) instrucciones -> . variable instrucciones
    (3) instrucciones -> . si instrucciones
    (4) instrucciones -> . imprimir instrucciones
    (5) instrucciones -> . for instrucciones
    (6) instrucciones -> . empty
    (10) variable -> . ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA
    (20) si -> . IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else
    (22) imprimir -> . WRITE DOSPUNTOS mensaje PUNTOCOMA
    (7) for -> . FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE
    (42) empty -> .

    ID              shift and go to state 7
    IF              shift and go to state 14
    WRITE           shift and go to state 15
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 42 (empty -> .)

    instrucciones                  shift and go to state 75
    variable                       shift and go to state 9
    si                             shift and go to state 10
    imprimir                       shift and go to state 11
    for                            shift and go to state 12
    empty                          shift and go to state 13

state 59

    (33) evaluar -> ID comparar ID .

    RPAREN          reduce using rule 33 (evaluar -> ID comparar ID .)


state 60

    (35) evaluar -> ID comparar NUMERO .

    RPAREN          reduce using rule 35 (evaluar -> ID comparar NUMERO .)


state 61

    (34) evaluar -> NUMERO comparar NUMERO .

    RPAREN          reduce using rule 34 (evaluar -> NUMERO comparar NUMERO .)


state 62

    (36) evaluar -> NUMERO comparar ID .

    RPAREN          reduce using rule 36 (evaluar -> NUMERO comparar ID .)


state 63

    (28) mensajerep -> datosM .

    PUNTOCOMA       reduce using rule 28 (mensajerep -> datosM .)


state 64

    (25) mensaje -> datosM COMA mensajerep .

    PUNTOCOMA       reduce using rule 25 (mensaje -> datosM COMA mensajerep .)


state 65

    (27) mensaje -> datosM COMA ID . mensajerep
    (29) mensajerep -> ID .
    (28) mensajerep -> . datosM
    (29) mensajerep -> . ID
    (30) datosM -> . NUMERO
    (31) datosM -> . NUMERO PUNTO NUMERO
    (32) datosM -> . CADENA

    PUNTOCOMA       reduce using rule 29 (mensajerep -> ID .)
    ID              shift and go to state 66
    NUMERO          shift and go to state 36
    CADENA          shift and go to state 37

    datosM                         shift and go to state 63
    mensajerep                     shift and go to state 76

state 66

    (29) mensajerep -> ID .

    PUNTOCOMA       reduce using rule 29 (mensajerep -> ID .)


state 67

    (26) mensaje -> ID COMA mensajerep .

    PUNTOCOMA       reduce using rule 26 (mensaje -> ID COMA mensajerep .)


state 68

    (31) datosM -> NUMERO PUNTO NUMERO .

    COMA            reduce using rule 31 (datosM -> NUMERO PUNTO NUMERO .)
    PUNTOCOMA       reduce using rule 31 (datosM -> NUMERO PUNTO NUMERO .)


state 69

    (9) valor -> ID .

    RPAREN          reduce using rule 9 (valor -> ID .)


state 70

    (7) for -> FOR LPAREN ID TO valor . RPAREN LLLAVE instrucciones RLLAVE

    RPAREN          shift and go to state 77


state 71

    (8) valor -> NUMERO .

    RPAREN          reduce using rule 8 (valor -> NUMERO .)


state 72

    (10) variable -> ID IGUAL tipodato LPAREN datos RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 78


state 73

    (15) datos -> NUMERO PUNTO . NUMERO

    NUMERO          shift and go to state 79


state 74

    (17) datos -> MINUS NUMERO .
    (18) datos -> MINUS NUMERO . PUNTO NUMERO

    RPAREN          reduce using rule 17 (datos -> MINUS NUMERO .)
    PUNTO           shift and go to state 80


state 75

    (20) si -> IF LPAREN evaluar RPAREN LLLAVE instrucciones . RLLAVE else

    RLLAVE          shift and go to state 81


state 76

    (27) mensaje -> datosM COMA ID mensajerep .

    PUNTOCOMA       reduce using rule 27 (mensaje -> datosM COMA ID mensajerep .)


state 77

    (7) for -> FOR LPAREN ID TO valor RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 82


state 78

    (10) variable -> ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA .

    ID              reduce using rule 10 (variable -> ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA .)
    IF              reduce using rule 10 (variable -> ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA .)
    WRITE           reduce using rule 10 (variable -> ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA .)
    FOR             reduce using rule 10 (variable -> ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA .)
    RLLAVE          reduce using rule 10 (variable -> ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA .)


state 79

    (15) datos -> NUMERO PUNTO NUMERO .

    RPAREN          reduce using rule 15 (datos -> NUMERO PUNTO NUMERO .)


state 80

    (18) datos -> MINUS NUMERO PUNTO . NUMERO

    NUMERO          shift and go to state 83


state 81

    (20) si -> IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE . else
    (21) else -> . ELSE LLLAVE instrucciones RLLAVE

    ELSE            shift and go to state 85

    else                           shift and go to state 84

state 82

    (7) for -> FOR LPAREN ID TO valor RPAREN LLLAVE . instrucciones RLLAVE
    (2) instrucciones -> . variable instrucciones
    (3) instrucciones -> . si instrucciones
    (4) instrucciones -> . imprimir instrucciones
    (5) instrucciones -> . for instrucciones
    (6) instrucciones -> . empty
    (10) variable -> . ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA
    (20) si -> . IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else
    (22) imprimir -> . WRITE DOSPUNTOS mensaje PUNTOCOMA
    (7) for -> . FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE
    (42) empty -> .

    ID              shift and go to state 7
    IF              shift and go to state 14
    WRITE           shift and go to state 15
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 42 (empty -> .)

    instrucciones                  shift and go to state 86
    variable                       shift and go to state 9
    si                             shift and go to state 10
    imprimir                       shift and go to state 11
    for                            shift and go to state 12
    empty                          shift and go to state 13

state 83

    (18) datos -> MINUS NUMERO PUNTO NUMERO .

    RPAREN          reduce using rule 18 (datos -> MINUS NUMERO PUNTO NUMERO .)


state 84

    (20) si -> IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else .

    ID              reduce using rule 20 (si -> IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else .)
    IF              reduce using rule 20 (si -> IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else .)
    WRITE           reduce using rule 20 (si -> IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else .)
    FOR             reduce using rule 20 (si -> IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else .)
    RLLAVE          reduce using rule 20 (si -> IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else .)


state 85

    (21) else -> ELSE . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 87


state 86

    (7) for -> FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones . RLLAVE

    RLLAVE          shift and go to state 88


state 87

    (21) else -> ELSE LLLAVE . instrucciones RLLAVE
    (2) instrucciones -> . variable instrucciones
    (3) instrucciones -> . si instrucciones
    (4) instrucciones -> . imprimir instrucciones
    (5) instrucciones -> . for instrucciones
    (6) instrucciones -> . empty
    (10) variable -> . ID IGUAL tipodato LPAREN datos RPAREN PUNTOCOMA
    (20) si -> . IF LPAREN evaluar RPAREN LLLAVE instrucciones RLLAVE else
    (22) imprimir -> . WRITE DOSPUNTOS mensaje PUNTOCOMA
    (7) for -> . FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE
    (42) empty -> .

    ID              shift and go to state 7
    IF              shift and go to state 14
    WRITE           shift and go to state 15
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 42 (empty -> .)

    instrucciones                  shift and go to state 89
    variable                       shift and go to state 9
    si                             shift and go to state 10
    imprimir                       shift and go to state 11
    for                            shift and go to state 12
    empty                          shift and go to state 13

state 88

    (7) for -> FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE .

    ID              reduce using rule 7 (for -> FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 7 (for -> FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE .)
    WRITE           reduce using rule 7 (for -> FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 7 (for -> FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 7 (for -> FOR LPAREN ID TO valor RPAREN LLLAVE instrucciones RLLAVE .)


state 89

    (21) else -> ELSE LLLAVE instrucciones . RLLAVE

    RLLAVE          shift and go to state 90


state 90

    (21) else -> ELSE LLLAVE instrucciones RLLAVE .

    ID              reduce using rule 21 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 21 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    WRITE           reduce using rule 21 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 21 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 21 (else -> ELSE LLLAVE instrucciones RLLAVE .)

